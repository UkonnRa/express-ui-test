syntax = "proto3";

package whiterabbit.journal;

import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "shared.proto";
import "access-item.proto";

message Journal {
  string id = 1;
  google.protobuf.Timestamp createdAt = 2;
  google.protobuf.Timestamp updatedAt = 3;

  string name = 4;
  string description = 5;
  repeated string tags = 6;
  string unit = 7;
  bool archived = 8;
  repeated whiterabbit.accessItem.AccessItem admins = 9;
  repeated whiterabbit.accessItem.AccessItem members = 10;
  bool isAdmin = 11;
  bool isWriteable = 12;
}

message AccessItemInput {
  whiterabbit.accessItem.AccessItemType type = 1;
  string id = 2;
}

message JournalPage {
  whiterabbit.shared.PageInfo pageInfo = 1;
  repeated JournalItem items = 2;
}

message JournalItem {
  string cursor = 1;
  Journal data = 2;
}

message JournalResponse {
  Journal item = 1;
}

message CreateCommand {
  optional string targetId = 1;
  string name = 2;
  string description = 3;
  repeated string tags = 4;
  string unit = 5;
  repeated AccessItemInput admins = 7;
  repeated AccessItemInput members = 8;
}

message UpdateCommand {
  string targetId = 1;
  optional string name = 2;
  optional string description = 3;
  whiterabbit.shared.NullableStringArray tags = 4;
  optional string unit = 5;
  optional bool archived = 6;
  NullableAccessItemArray admins = 7;
  NullableAccessItemArray members = 8;
}

message NullableAccessItemArray {
  repeated AccessItemInput values = 1;
}

message DeleteCommand {
  string targetId = 1;
}

message Command {
  oneof command {
    CreateCommand create = 1;
    UpdateCommand update = 2;
    DeleteCommand delete = 3;
  }
}

message Commands {
  repeated Command commands = 1;
}

service JournalService {
  rpc findOne(google.protobuf.StringValue) returns (JournalResponse);
  rpc findPage(whiterabbit.shared.FindPageRequest) returns (JournalPage);
  rpc findAll(google.protobuf.StringValue) returns (stream Journal);

  rpc handle(Command) returns (JournalResponse);
  rpc handleAll(Commands) returns (stream JournalResponse);
}

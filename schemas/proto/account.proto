syntax = "proto3";

package whiterabbit.account;

import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "shared.proto";

message Account {
  string id = 1;
  google.protobuf.Timestamp createdAt = 2;
  google.protobuf.Timestamp updatedAt = 3;

  string journal = 4;
  string name = 5;
  string description = 6;

  Type type = 7;
  Strategy strategy = 8;
  string unit = 9;
  bool archived = 10;
}

enum Type {
  INCOME = 0;
  EXPENSE = 1;
  ASSET = 2;
  LIABILITY = 3;
  EQUITY = 4;
}

enum Strategy {
  FIFO = 0;
  AVERAGE = 1;
}

message AccountPage {
  whiterabbit.shared.PageInfo pageInfo = 1;
  repeated AccountItem items = 2;
}

message AccountItem {
  string cursor = 1;
  Account data = 2;
}

message AccountResponse {
  Account account = 1;
}

message CreateCommand {
  optional string id = 1;
  string journal = 2;
  string name = 3;
  string description = 4;
  Type type = 5;
  Strategy strategy = 6;
  string unit = 7;
  bool archived = 8;
}

message UpdateCommand {
  string id = 1;

  optional string journal = 2;
  optional string name = 3;
  optional string description = 4;
  optional Type type = 5;
  optional Strategy strategy = 6;
  optional string unit = 7;
  optional bool archived = 8;
}

message DeleteCommand {
  string id = 1;
}

message Command {
  oneof command {
    CreateCommand create = 1;
    UpdateCommand update = 2;
    DeleteCommand delete = 3;
  }
}

message Commands {
  repeated Command commands = 1;
}

service AccountService {
  rpc findOne(google.protobuf.StringValue) returns (AccountResponse);
  rpc findPage(whiterabbit.shared.FindPageRequest) returns (AccountPage);

  rpc handle(Command) returns (AccountResponse);
  rpc handleAll(Commands) returns (stream AccountResponse);
}

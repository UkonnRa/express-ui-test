syntax = "proto3";

package whiterabbit.user;

import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "shared.proto";

message User {
  string id = 1;
  google.protobuf.Timestamp createdAt = 2;
  google.protobuf.Timestamp updatedAt = 3;

  string name = 4;
  Role role = 5;
  map<string, string> authIds = 6;
}

enum Role {
  USER = 0;
  ADMIN = 1;
  OWNER = 2;
}

message UserPage {
  whiterabbit.shared.PageInfo pageInfo = 1;
  repeated UserItem items = 2;
}

message UserItem {
  string cursor = 1;
  User data = 2;
}

message UserResponse {
  User item = 1;
}

message CreateCommand {
  optional string targetId = 1;
  string name = 2;
  optional Role role = 3;
  NullableAuthIds authIds = 4;
}

message UpdateCommand {
  string targetId = 1;
  optional string name = 2;
  optional Role role = 3;
  NullableAuthIds authIds = 4;
}

message NullableAuthIds {
  map<string, string> values = 1;
}

message DeleteCommand {
  string targetId = 1;
}

message Command {
  oneof command {
    CreateCommand create = 1;
    UpdateCommand update = 2;
    DeleteCommand delete = 3;
  }
}

message Commands {
  repeated Command commands = 1;
}

service UserService {
  rpc findOne(google.protobuf.StringValue) returns (UserResponse);
  rpc findPage(whiterabbit.shared.FindPageRequest) returns (UserPage);
  rpc findAll(google.protobuf.StringValue) returns (stream User);

  rpc handle(Command) returns (UserResponse);
  rpc handleAll(Commands) returns (stream UserResponse);
}

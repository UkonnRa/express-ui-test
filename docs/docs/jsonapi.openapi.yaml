openapi: 3.0.3
info:
  title: Wonderland WhiteRabbit RESTful API Specification
  description: The full API RESTful style API specification using JSON:API schema
  version: 0.1.0
servers:
  - url: https://localhost:8080
paths:
  /journals:
    get:
      operationId: JournalGetAll
      parameters:
        - $ref: '#/components/parameters/JournalGetAllParameterInclude'
        - $ref: '#/components/parameters/JournalGetAllParameterSort'
        - $ref: '#/components/parameters/GetAllParameterFields'
        - $ref: '#/components/parameters/GetAllParameterPage'
        - $ref: '#/components/parameters/GetAllParameterFilter'
      responses:
        "200":
          description: OK
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/JournalTopLevelDataArray'
components:
  parameters:
    GetAllParameterFields:
      name: fields
      in: query
      schema:
        type: object
        additionalProperties:
          type: array
          items:
            type: string
    GetAllParameterPage:
      name: page
      in: query
      schema:
        type: object
    GetAllParameterFilter:
        name: filter
        in: query
        schema:
          type: object

    ### Journal params Start
    JournalGetAllParameterInclude:
      name: include
      in: query
      schema:
        type: array
        items:
          type: string
          enum:
            - admins
            - members
    JournalGetAllParameterSort:
      name: sort
      in: query
      schema:
        type: array
        items:
          type: string
          enum:
            - name
            - startDate
    ### Journal params end

  schemas:
    ### Common schemas start
    Relationship:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ResourceLinkage'
        links:
          type: object
          properties:
            self:
              $ref: '#/components/schemas/Link'
            related:
              $ref: '#/components/schemas/Link'
        meta:
          type: object
    ResourceLinkage:
      oneOf:
        - $ref: '#/components/schemas/ResourceIdentifier'
        - type: array
          items:
            $ref: '#/components/schemas/ResourceIdentifier'
    ResourceIdentifier:
      required:
        - id
        - type
      type: object
      properties:
        id:
          type: string
        type:
          type: string
    JsonapiError:
      type: object
      properties:
        links:
          type: object
          properties:
            about:
              $ref: '#/components/schemas/Link'
        title:
          type: string
        meta:
          type: object
        status:
          type: string
        detail:
          type: string
        code:
          type: string
        source:
          type: object
          properties:
            pointer:
              type: string
            parameter:
              type: string
        id:
          type: string
    Jsonapi:
      required:
        - version
      type: object
      properties:
        version:
          type: string
        meta:
          type: object
    PaginationMeta:
      type: object
      properties:
        rangeTruncated:
          type: integer
          format: int32
    Resource:
      required:
        - type
        - id
      type: object
      properties:
        type:
          type: string
        links:
          type: object
          properties:
            self:
              $ref: '#/components/schemas/Link'
        relationships:
          type: object
          additionalProperties:
            oneOf:
              - $ref: '#/components/schemas/Relationship'
              - type: array
                items:
                  $ref: '#/components/schemas/Relationship'
        meta:
          type: object
        attributes:
          type: object
        id:
          type: string
    Link:
      oneOf:
        - type: string
        - required:
            - href
          type: object
          properties:
            href:
              type: string
            meta:
              type: object
    ### Common schemas end

    ### Journal schemas start
    JournalAttributes:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
        description:
          type: string
        startDate:
          type: number
        endDate:
          type: number
        archived:
          type: boolean
    JournalRelationships:
      type: object
      additionalProperties: false
      properties:
        admins:
          type: array
          items:
            discriminator:
              propertyName: type
            oneOf:
              - $ref: '#/components/schemas/UserResourceIdentifier'
              - $ref: '#/components/schemas/GroupResourceIdentifier'
        members:
          type: array
          items:
            discriminator:
              propertyName: type
            oneOf:
              - $ref: '#/components/schemas/UserResourceIdentifier'
              - $ref: '#/components/schemas/GroupResourceIdentifier'
    JournalResource:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
          enum:
            - articles
        links:
          type: object
          properties:
            self:
              $ref: '#/components/schemas/Link'
        relationships:
          $ref: '#/components/schemas/JournalRelationships'
        attributes:
          $ref: '#/components/schemas/JournalAttributes'
      additionalProperties: false
    JournalResourceIdentifier:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
          enum:
            - journals
      additionalProperties: false
    JournalTopLevelDataArray:
      required:
        - data
      type: object
      properties:
        links:
          type: object
          properties:
            next:
              $ref: '#/components/schemas/Link'
            first:
              $ref: '#/components/schemas/Link'
            self:
              $ref: '#/components/schemas/Link'
            related:
              $ref: '#/components/schemas/Link'
            last:
              $ref: '#/components/schemas/Link'
            prev:
              $ref: '#/components/schemas/Link'
        included:
          type: array
          items:
            $ref: '#/components/schemas/Resource'
        meta:
          type: object
          properties:
            page:
              $ref: '#/components/schemas/PaginationMeta'
        data:
          type: array
          items:
            $ref: '#/components/schemas/JournalResource'
        jsonapi:
          $ref: '#/components/schemas/Jsonapi'
      additionalProperties: false
    JournalTopLevelDataSingle:
      required:
        - data
      type: object
      properties:
        included:
          type: array
          items:
            $ref: '#/components/schemas/Resource'
        data:
          $ref: '#/components/schemas/JournalResource'
        jsonapi:
          $ref: '#/components/schemas/Jsonapi'
        links:
          type: object
          properties:
            self:
              $ref: '#/components/schemas/Link'
            related:
              $ref: '#/components/schemas/Link'
      additionalProperties: false

    ### Journal schemas end
    ### User schemas start
    UserResourceIdentifier:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
          enum:
            - users
      additionalProperties: false
    ### User schemas end
    ### Group schemas start
    GroupResourceIdentifier:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
          enum:
            - groups
      additionalProperties: false
    ### Group schemas end

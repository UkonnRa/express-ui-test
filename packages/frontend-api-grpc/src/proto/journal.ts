/* eslint-disable */
// @generated by protobuf-ts 2.7.0 with parameter eslint_disable,ts_nocheck,optimize_code_size
// @generated from protobuf file "journal.proto" (package "whiterabbit.journal", syntax proto3)
// tslint:disable
// @ts-nocheck
import { FindPageRequest } from "./shared";
import { StringValue } from "./google/protobuf/wrappers";
import { ServiceType } from "@protobuf-ts/runtime-rpc";
import { MessageType } from "@protobuf-ts/runtime";
import { NullableStringArray } from "./shared";
import { PageInfo } from "./shared";
import { AccessItemType } from "./access-item";
import { AccessItem } from "./access-item";
import { Timestamp } from "./google/protobuf/timestamp";
/**
 * @generated from protobuf message whiterabbit.journal.Journal
 */
export interface Journal {
  /**
   * @generated from protobuf field: string id = 1;
   */
  id: string;
  /**
   * @generated from protobuf field: google.protobuf.Timestamp createdAt = 2;
   */
  createdAt?: Timestamp;
  /**
   * @generated from protobuf field: google.protobuf.Timestamp updatedAt = 3;
   */
  updatedAt?: Timestamp;
  /**
   * @generated from protobuf field: string name = 4;
   */
  name: string;
  /**
   * @generated from protobuf field: string description = 5;
   */
  description: string;
  /**
   * @generated from protobuf field: repeated string tags = 6;
   */
  tags: string[];
  /**
   * @generated from protobuf field: string unit = 7;
   */
  unit: string;
  /**
   * @generated from protobuf field: bool archived = 8;
   */
  archived: boolean;
  /**
   * @generated from protobuf field: repeated whiterabbit.accessItem.AccessItem admins = 9;
   */
  admins: AccessItem[];
  /**
   * @generated from protobuf field: repeated whiterabbit.accessItem.AccessItem members = 10;
   */
  members: AccessItem[];
  /**
   * @generated from protobuf field: bool isAdmin = 11;
   */
  isAdmin: boolean;
  /**
   * @generated from protobuf field: bool isWriteable = 12;
   */
  isWriteable: boolean;
}
/**
 * @generated from protobuf message whiterabbit.journal.AccessItemInput
 */
export interface AccessItemInput {
  /**
   * @generated from protobuf field: whiterabbit.accessItem.AccessItemType type = 1;
   */
  type: AccessItemType;
  /**
   * @generated from protobuf field: string id = 2;
   */
  id: string;
}
/**
 * @generated from protobuf message whiterabbit.journal.JournalPage
 */
export interface JournalPage {
  /**
   * @generated from protobuf field: whiterabbit.shared.PageInfo pageInfo = 1;
   */
  pageInfo?: PageInfo;
  /**
   * @generated from protobuf field: repeated whiterabbit.journal.JournalItem items = 2;
   */
  items: JournalItem[];
}
/**
 * @generated from protobuf message whiterabbit.journal.JournalItem
 */
export interface JournalItem {
  /**
   * @generated from protobuf field: string cursor = 1;
   */
  cursor: string;
  /**
   * @generated from protobuf field: whiterabbit.journal.Journal data = 2;
   */
  data?: Journal;
}
/**
 * @generated from protobuf message whiterabbit.journal.JournalResponse
 */
export interface JournalResponse {
  /**
   * @generated from protobuf field: whiterabbit.journal.Journal item = 1;
   */
  item?: Journal;
}
/**
 * @generated from protobuf message whiterabbit.journal.CreateCommand
 */
export interface CreateCommand {
  /**
   * @generated from protobuf field: optional string targetId = 1;
   */
  targetId?: string;
  /**
   * @generated from protobuf field: string name = 2;
   */
  name: string;
  /**
   * @generated from protobuf field: string description = 3;
   */
  description: string;
  /**
   * @generated from protobuf field: repeated string tags = 4;
   */
  tags: string[];
  /**
   * @generated from protobuf field: string unit = 5;
   */
  unit: string;
  /**
   * @generated from protobuf field: repeated whiterabbit.journal.AccessItemInput admins = 7;
   */
  admins: AccessItemInput[];
  /**
   * @generated from protobuf field: repeated whiterabbit.journal.AccessItemInput members = 8;
   */
  members: AccessItemInput[];
}
/**
 * @generated from protobuf message whiterabbit.journal.UpdateCommand
 */
export interface UpdateCommand {
  /**
   * @generated from protobuf field: string targetId = 1;
   */
  targetId: string;
  /**
   * @generated from protobuf field: optional string name = 2;
   */
  name?: string;
  /**
   * @generated from protobuf field: optional string description = 3;
   */
  description?: string;
  /**
   * @generated from protobuf field: whiterabbit.shared.NullableStringArray tags = 4;
   */
  tags?: NullableStringArray;
  /**
   * @generated from protobuf field: optional string unit = 5;
   */
  unit?: string;
  /**
   * @generated from protobuf field: optional bool archived = 6;
   */
  archived?: boolean;
  /**
   * @generated from protobuf field: whiterabbit.journal.NullableAccessItemArray admins = 7;
   */
  admins?: NullableAccessItemArray;
  /**
   * @generated from protobuf field: whiterabbit.journal.NullableAccessItemArray members = 8;
   */
  members?: NullableAccessItemArray;
}
/**
 * @generated from protobuf message whiterabbit.journal.NullableAccessItemArray
 */
export interface NullableAccessItemArray {
  /**
   * @generated from protobuf field: repeated whiterabbit.journal.AccessItemInput values = 1;
   */
  values: AccessItemInput[];
}
/**
 * @generated from protobuf message whiterabbit.journal.DeleteCommand
 */
export interface DeleteCommand {
  /**
   * @generated from protobuf field: string targetId = 1;
   */
  targetId: string;
}
/**
 * @generated from protobuf message whiterabbit.journal.Command
 */
export interface Command {
  /**
   * @generated from protobuf oneof: command
   */
  command:
    | {
        oneofKind: "create";
        /**
         * @generated from protobuf field: whiterabbit.journal.CreateCommand create = 1;
         */
        create: CreateCommand;
      }
    | {
        oneofKind: "update";
        /**
         * @generated from protobuf field: whiterabbit.journal.UpdateCommand update = 2;
         */
        update: UpdateCommand;
      }
    | {
        oneofKind: "delete";
        /**
         * @generated from protobuf field: whiterabbit.journal.DeleteCommand delete = 3;
         */
        delete: DeleteCommand;
      }
    | {
        oneofKind: undefined;
      };
}
/**
 * @generated from protobuf message whiterabbit.journal.Commands
 */
export interface Commands {
  /**
   * @generated from protobuf field: repeated whiterabbit.journal.Command commands = 1;
   */
  commands: Command[];
}
// @generated message type with reflection information, may provide speed optimized methods
class Journal$Type extends MessageType<Journal> {
  constructor() {
    super("whiterabbit.journal.Journal", [
      { no: 1, name: "id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
      { no: 2, name: "createdAt", kind: "message", T: () => Timestamp },
      { no: 3, name: "updatedAt", kind: "message", T: () => Timestamp },
      { no: 4, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
      {
        no: 5,
        name: "description",
        kind: "scalar",
        T: 9 /*ScalarType.STRING*/,
      },
      {
        no: 6,
        name: "tags",
        kind: "scalar",
        repeat: 2 /*RepeatType.UNPACKED*/,
        T: 9 /*ScalarType.STRING*/,
      },
      { no: 7, name: "unit", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
      { no: 8, name: "archived", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
      {
        no: 9,
        name: "admins",
        kind: "message",
        repeat: 1 /*RepeatType.PACKED*/,
        T: () => AccessItem,
      },
      {
        no: 10,
        name: "members",
        kind: "message",
        repeat: 1 /*RepeatType.PACKED*/,
        T: () => AccessItem,
      },
      { no: 11, name: "isAdmin", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
      { no: 12, name: "isWriteable", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
    ]);
  }
}
/**
 * @generated MessageType for protobuf message whiterabbit.journal.Journal
 */
export const Journal = new Journal$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AccessItemInput$Type extends MessageType<AccessItemInput> {
  constructor() {
    super("whiterabbit.journal.AccessItemInput", [
      {
        no: 1,
        name: "type",
        kind: "enum",
        T: () => ["whiterabbit.accessItem.AccessItemType", AccessItemType],
      },
      { no: 2, name: "id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
    ]);
  }
}
/**
 * @generated MessageType for protobuf message whiterabbit.journal.AccessItemInput
 */
export const AccessItemInput = new AccessItemInput$Type();
// @generated message type with reflection information, may provide speed optimized methods
class JournalPage$Type extends MessageType<JournalPage> {
  constructor() {
    super("whiterabbit.journal.JournalPage", [
      { no: 1, name: "pageInfo", kind: "message", T: () => PageInfo },
      {
        no: 2,
        name: "items",
        kind: "message",
        repeat: 1 /*RepeatType.PACKED*/,
        T: () => JournalItem,
      },
    ]);
  }
}
/**
 * @generated MessageType for protobuf message whiterabbit.journal.JournalPage
 */
export const JournalPage = new JournalPage$Type();
// @generated message type with reflection information, may provide speed optimized methods
class JournalItem$Type extends MessageType<JournalItem> {
  constructor() {
    super("whiterabbit.journal.JournalItem", [
      { no: 1, name: "cursor", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
      { no: 2, name: "data", kind: "message", T: () => Journal },
    ]);
  }
}
/**
 * @generated MessageType for protobuf message whiterabbit.journal.JournalItem
 */
export const JournalItem = new JournalItem$Type();
// @generated message type with reflection information, may provide speed optimized methods
class JournalResponse$Type extends MessageType<JournalResponse> {
  constructor() {
    super("whiterabbit.journal.JournalResponse", [
      { no: 1, name: "item", kind: "message", T: () => Journal },
    ]);
  }
}
/**
 * @generated MessageType for protobuf message whiterabbit.journal.JournalResponse
 */
export const JournalResponse = new JournalResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CreateCommand$Type extends MessageType<CreateCommand> {
  constructor() {
    super("whiterabbit.journal.CreateCommand", [
      {
        no: 1,
        name: "targetId",
        kind: "scalar",
        opt: true,
        T: 9 /*ScalarType.STRING*/,
      },
      { no: 2, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
      {
        no: 3,
        name: "description",
        kind: "scalar",
        T: 9 /*ScalarType.STRING*/,
      },
      {
        no: 4,
        name: "tags",
        kind: "scalar",
        repeat: 2 /*RepeatType.UNPACKED*/,
        T: 9 /*ScalarType.STRING*/,
      },
      { no: 5, name: "unit", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
      {
        no: 7,
        name: "admins",
        kind: "message",
        repeat: 1 /*RepeatType.PACKED*/,
        T: () => AccessItemInput,
      },
      {
        no: 8,
        name: "members",
        kind: "message",
        repeat: 1 /*RepeatType.PACKED*/,
        T: () => AccessItemInput,
      },
    ]);
  }
}
/**
 * @generated MessageType for protobuf message whiterabbit.journal.CreateCommand
 */
export const CreateCommand = new CreateCommand$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UpdateCommand$Type extends MessageType<UpdateCommand> {
  constructor() {
    super("whiterabbit.journal.UpdateCommand", [
      { no: 1, name: "targetId", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
      {
        no: 2,
        name: "name",
        kind: "scalar",
        opt: true,
        T: 9 /*ScalarType.STRING*/,
      },
      {
        no: 3,
        name: "description",
        kind: "scalar",
        opt: true,
        T: 9 /*ScalarType.STRING*/,
      },
      { no: 4, name: "tags", kind: "message", T: () => NullableStringArray },
      {
        no: 5,
        name: "unit",
        kind: "scalar",
        opt: true,
        T: 9 /*ScalarType.STRING*/,
      },
      {
        no: 6,
        name: "archived",
        kind: "scalar",
        opt: true,
        T: 8 /*ScalarType.BOOL*/,
      },
      {
        no: 7,
        name: "admins",
        kind: "message",
        T: () => NullableAccessItemArray,
      },
      {
        no: 8,
        name: "members",
        kind: "message",
        T: () => NullableAccessItemArray,
      },
    ]);
  }
}
/**
 * @generated MessageType for protobuf message whiterabbit.journal.UpdateCommand
 */
export const UpdateCommand = new UpdateCommand$Type();
// @generated message type with reflection information, may provide speed optimized methods
class NullableAccessItemArray$Type extends MessageType<NullableAccessItemArray> {
  constructor() {
    super("whiterabbit.journal.NullableAccessItemArray", [
      {
        no: 1,
        name: "values",
        kind: "message",
        repeat: 1 /*RepeatType.PACKED*/,
        T: () => AccessItemInput,
      },
    ]);
  }
}
/**
 * @generated MessageType for protobuf message whiterabbit.journal.NullableAccessItemArray
 */
export const NullableAccessItemArray = new NullableAccessItemArray$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DeleteCommand$Type extends MessageType<DeleteCommand> {
  constructor() {
    super("whiterabbit.journal.DeleteCommand", [
      { no: 1, name: "targetId", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
    ]);
  }
}
/**
 * @generated MessageType for protobuf message whiterabbit.journal.DeleteCommand
 */
export const DeleteCommand = new DeleteCommand$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Command$Type extends MessageType<Command> {
  constructor() {
    super("whiterabbit.journal.Command", [
      {
        no: 1,
        name: "create",
        kind: "message",
        oneof: "command",
        T: () => CreateCommand,
      },
      {
        no: 2,
        name: "update",
        kind: "message",
        oneof: "command",
        T: () => UpdateCommand,
      },
      {
        no: 3,
        name: "delete",
        kind: "message",
        oneof: "command",
        T: () => DeleteCommand,
      },
    ]);
  }
}
/**
 * @generated MessageType for protobuf message whiterabbit.journal.Command
 */
export const Command = new Command$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Commands$Type extends MessageType<Commands> {
  constructor() {
    super("whiterabbit.journal.Commands", [
      {
        no: 1,
        name: "commands",
        kind: "message",
        repeat: 1 /*RepeatType.PACKED*/,
        T: () => Command,
      },
    ]);
  }
}
/**
 * @generated MessageType for protobuf message whiterabbit.journal.Commands
 */
export const Commands = new Commands$Type();
/**
 * @generated ServiceType for protobuf service whiterabbit.journal.JournalService
 */
export const JournalService = new ServiceType(
  "whiterabbit.journal.JournalService",
  [
    { name: "findOne", options: {}, I: StringValue, O: JournalResponse },
    { name: "findPage", options: {}, I: FindPageRequest, O: JournalPage },
    {
      name: "findAll",
      serverStreaming: true,
      options: {},
      I: StringValue,
      O: Journal,
    },
    { name: "handle", options: {}, I: Command, O: JournalResponse },
    {
      name: "handleAll",
      serverStreaming: true,
      options: {},
      I: Commands,
      O: JournalResponse,
    },
  ]
);

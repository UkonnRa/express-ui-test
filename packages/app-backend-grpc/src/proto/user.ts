/* eslint-disable */
// @generated by protobuf-ts 2.7.0 with parameter eslint_disable,ts_nocheck,server_generic,client_none,optimize_code_size
// @generated from protobuf file "user.proto" (package "whiterabbit.user", syntax proto3)
// tslint:disable
// @ts-nocheck
import { FindPageRequest } from "./shared";
import { StringValue } from "./google/protobuf/wrappers";
import { ServiceType } from "@protobuf-ts/runtime-rpc";
import { MessageType } from "@protobuf-ts/runtime";
import { PageInfo } from "./shared";
import { Timestamp } from "./google/protobuf/timestamp";
/**
 * @generated from protobuf message whiterabbit.user.User
 */
export interface User {
  /**
   * @generated from protobuf field: string id = 1;
   */
  id: string;
  /**
   * @generated from protobuf field: google.protobuf.Timestamp createdAt = 2;
   */
  createdAt?: Timestamp;
  /**
   * @generated from protobuf field: google.protobuf.Timestamp updatedAt = 3;
   */
  updatedAt?: Timestamp;
  /**
   * @generated from protobuf field: string name = 4;
   */
  name: string;
  /**
   * @generated from protobuf field: whiterabbit.user.Role role = 5;
   */
  role: Role;
  /**
   * @generated from protobuf field: map<string, string> authIds = 6;
   */
  authIds: {
    [key: string]: string;
  };
}
/**
 * @generated from protobuf message whiterabbit.user.UserPage
 */
export interface UserPage {
  /**
   * @generated from protobuf field: whiterabbit.shared.PageInfo pageInfo = 1;
   */
  pageInfo?: PageInfo;
  /**
   * @generated from protobuf field: repeated whiterabbit.user.UserItem items = 2;
   */
  items: UserItem[];
}
/**
 * @generated from protobuf message whiterabbit.user.UserItem
 */
export interface UserItem {
  /**
   * @generated from protobuf field: string cursor = 1;
   */
  cursor: string;
  /**
   * @generated from protobuf field: whiterabbit.user.User data = 2;
   */
  data?: User;
}
/**
 * @generated from protobuf message whiterabbit.user.UserResponse
 */
export interface UserResponse {
  /**
   * @generated from protobuf field: whiterabbit.user.User item = 1;
   */
  item?: User;
}
/**
 * @generated from protobuf message whiterabbit.user.CreateCommand
 */
export interface CreateCommand {
  /**
   * @generated from protobuf field: optional string targetId = 1;
   */
  targetId?: string;
  /**
   * @generated from protobuf field: string name = 2;
   */
  name: string;
  /**
   * @generated from protobuf field: optional whiterabbit.user.Role role = 3;
   */
  role?: Role;
  /**
   * @generated from protobuf field: whiterabbit.user.NullableAuthIds authIds = 4;
   */
  authIds?: NullableAuthIds;
}
/**
 * @generated from protobuf message whiterabbit.user.UpdateCommand
 */
export interface UpdateCommand {
  /**
   * @generated from protobuf field: string targetId = 1;
   */
  targetId: string;
  /**
   * @generated from protobuf field: optional string name = 2;
   */
  name?: string;
  /**
   * @generated from protobuf field: optional whiterabbit.user.Role role = 3;
   */
  role?: Role;
  /**
   * @generated from protobuf field: whiterabbit.user.NullableAuthIds authIds = 4;
   */
  authIds?: NullableAuthIds;
}
/**
 * @generated from protobuf message whiterabbit.user.NullableAuthIds
 */
export interface NullableAuthIds {
  /**
   * @generated from protobuf field: map<string, string> values = 1;
   */
  values: {
    [key: string]: string;
  };
}
/**
 * @generated from protobuf message whiterabbit.user.DeleteCommand
 */
export interface DeleteCommand {
  /**
   * @generated from protobuf field: string targetId = 1;
   */
  targetId: string;
}
/**
 * @generated from protobuf message whiterabbit.user.Command
 */
export interface Command {
  /**
   * @generated from protobuf oneof: command
   */
  command:
    | {
        oneofKind: "create";
        /**
         * @generated from protobuf field: whiterabbit.user.CreateCommand create = 1;
         */
        create: CreateCommand;
      }
    | {
        oneofKind: "update";
        /**
         * @generated from protobuf field: whiterabbit.user.UpdateCommand update = 2;
         */
        update: UpdateCommand;
      }
    | {
        oneofKind: "delete";
        /**
         * @generated from protobuf field: whiterabbit.user.DeleteCommand delete = 3;
         */
        delete: DeleteCommand;
      }
    | {
        oneofKind: undefined;
      };
}
/**
 * @generated from protobuf message whiterabbit.user.Commands
 */
export interface Commands {
  /**
   * @generated from protobuf field: repeated whiterabbit.user.Command commands = 1;
   */
  commands: Command[];
}
/**
 * @generated from protobuf enum whiterabbit.user.Role
 */
export enum Role {
  /**
   * @generated from protobuf enum value: USER = 0;
   */
  USER = 0,
  /**
   * @generated from protobuf enum value: ADMIN = 1;
   */
  ADMIN = 1,
  /**
   * @generated from protobuf enum value: OWNER = 2;
   */
  OWNER = 2,
}
// @generated message type with reflection information, may provide speed optimized methods
class User$Type extends MessageType<User> {
  constructor() {
    super("whiterabbit.user.User", [
      { no: 1, name: "id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
      { no: 2, name: "createdAt", kind: "message", T: () => Timestamp },
      { no: 3, name: "updatedAt", kind: "message", T: () => Timestamp },
      { no: 4, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
      {
        no: 5,
        name: "role",
        kind: "enum",
        T: () => ["whiterabbit.user.Role", Role],
      },
      {
        no: 6,
        name: "authIds",
        kind: "map",
        K: 9 /*ScalarType.STRING*/,
        V: { kind: "scalar", T: 9 /*ScalarType.STRING*/ },
      },
    ]);
  }
}
/**
 * @generated MessageType for protobuf message whiterabbit.user.User
 */
export const User = new User$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UserPage$Type extends MessageType<UserPage> {
  constructor() {
    super("whiterabbit.user.UserPage", [
      { no: 1, name: "pageInfo", kind: "message", T: () => PageInfo },
      {
        no: 2,
        name: "items",
        kind: "message",
        repeat: 1 /*RepeatType.PACKED*/,
        T: () => UserItem,
      },
    ]);
  }
}
/**
 * @generated MessageType for protobuf message whiterabbit.user.UserPage
 */
export const UserPage = new UserPage$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UserItem$Type extends MessageType<UserItem> {
  constructor() {
    super("whiterabbit.user.UserItem", [
      { no: 1, name: "cursor", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
      { no: 2, name: "data", kind: "message", T: () => User },
    ]);
  }
}
/**
 * @generated MessageType for protobuf message whiterabbit.user.UserItem
 */
export const UserItem = new UserItem$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UserResponse$Type extends MessageType<UserResponse> {
  constructor() {
    super("whiterabbit.user.UserResponse", [
      { no: 1, name: "item", kind: "message", T: () => User },
    ]);
  }
}
/**
 * @generated MessageType for protobuf message whiterabbit.user.UserResponse
 */
export const UserResponse = new UserResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CreateCommand$Type extends MessageType<CreateCommand> {
  constructor() {
    super("whiterabbit.user.CreateCommand", [
      {
        no: 1,
        name: "targetId",
        kind: "scalar",
        opt: true,
        T: 9 /*ScalarType.STRING*/,
      },
      { no: 2, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
      {
        no: 3,
        name: "role",
        kind: "enum",
        opt: true,
        T: () => ["whiterabbit.user.Role", Role],
      },
      { no: 4, name: "authIds", kind: "message", T: () => NullableAuthIds },
    ]);
  }
}
/**
 * @generated MessageType for protobuf message whiterabbit.user.CreateCommand
 */
export const CreateCommand = new CreateCommand$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UpdateCommand$Type extends MessageType<UpdateCommand> {
  constructor() {
    super("whiterabbit.user.UpdateCommand", [
      { no: 1, name: "targetId", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
      {
        no: 2,
        name: "name",
        kind: "scalar",
        opt: true,
        T: 9 /*ScalarType.STRING*/,
      },
      {
        no: 3,
        name: "role",
        kind: "enum",
        opt: true,
        T: () => ["whiterabbit.user.Role", Role],
      },
      { no: 4, name: "authIds", kind: "message", T: () => NullableAuthIds },
    ]);
  }
}
/**
 * @generated MessageType for protobuf message whiterabbit.user.UpdateCommand
 */
export const UpdateCommand = new UpdateCommand$Type();
// @generated message type with reflection information, may provide speed optimized methods
class NullableAuthIds$Type extends MessageType<NullableAuthIds> {
  constructor() {
    super("whiterabbit.user.NullableAuthIds", [
      {
        no: 1,
        name: "values",
        kind: "map",
        K: 9 /*ScalarType.STRING*/,
        V: { kind: "scalar", T: 9 /*ScalarType.STRING*/ },
      },
    ]);
  }
}
/**
 * @generated MessageType for protobuf message whiterabbit.user.NullableAuthIds
 */
export const NullableAuthIds = new NullableAuthIds$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DeleteCommand$Type extends MessageType<DeleteCommand> {
  constructor() {
    super("whiterabbit.user.DeleteCommand", [
      { no: 1, name: "targetId", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
    ]);
  }
}
/**
 * @generated MessageType for protobuf message whiterabbit.user.DeleteCommand
 */
export const DeleteCommand = new DeleteCommand$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Command$Type extends MessageType<Command> {
  constructor() {
    super("whiterabbit.user.Command", [
      {
        no: 1,
        name: "create",
        kind: "message",
        oneof: "command",
        T: () => CreateCommand,
      },
      {
        no: 2,
        name: "update",
        kind: "message",
        oneof: "command",
        T: () => UpdateCommand,
      },
      {
        no: 3,
        name: "delete",
        kind: "message",
        oneof: "command",
        T: () => DeleteCommand,
      },
    ]);
  }
}
/**
 * @generated MessageType for protobuf message whiterabbit.user.Command
 */
export const Command = new Command$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Commands$Type extends MessageType<Commands> {
  constructor() {
    super("whiterabbit.user.Commands", [
      {
        no: 1,
        name: "commands",
        kind: "message",
        repeat: 1 /*RepeatType.PACKED*/,
        T: () => Command,
      },
    ]);
  }
}
/**
 * @generated MessageType for protobuf message whiterabbit.user.Commands
 */
export const Commands = new Commands$Type();
/**
 * @generated ServiceType for protobuf service whiterabbit.user.UserService
 */
export const UserService = new ServiceType("whiterabbit.user.UserService", [
  { name: "findOne", options: {}, I: StringValue, O: UserResponse },
  { name: "findPage", options: {}, I: FindPageRequest, O: UserPage },
  {
    name: "findAll",
    serverStreaming: true,
    options: {},
    I: StringValue,
    O: User,
  },
  { name: "handle", options: {}, I: Command, O: UserResponse },
  {
    name: "handleAll",
    serverStreaming: true,
    options: {},
    I: Commands,
    O: UserResponse,
  },
]);

/* eslint-disable */
// @generated by protobuf-ts 2.7.0 with parameter eslint_disable,ts_nocheck,server_generic,client_none,optimize_code_size
// @generated from protobuf file "account.proto" (package "whiterabbit.account", syntax proto3)
// tslint:disable
// @ts-nocheck
import { FindPageRequest } from "./shared";
import { StringValue } from "./google/protobuf/wrappers";
import { ServiceType } from "@protobuf-ts/runtime-rpc";
import { MessageType } from "@protobuf-ts/runtime";
import { PageInfo } from "./shared";
import { Timestamp } from "./google/protobuf/timestamp";
/**
 * @generated from protobuf message whiterabbit.account.Account
 */
export interface Account {
  /**
   * @generated from protobuf field: string id = 1;
   */
  id: string;
  /**
   * @generated from protobuf field: google.protobuf.Timestamp createdAt = 2;
   */
  createdAt?: Timestamp;
  /**
   * @generated from protobuf field: google.protobuf.Timestamp updatedAt = 3;
   */
  updatedAt?: Timestamp;
  /**
   * @generated from protobuf field: string journal = 4;
   */
  journal: string;
  /**
   * @generated from protobuf field: string name = 5;
   */
  name: string;
  /**
   * @generated from protobuf field: string description = 6;
   */
  description: string;
  /**
   * @generated from protobuf field: whiterabbit.account.Type type = 7;
   */
  type: Type;
  /**
   * @generated from protobuf field: whiterabbit.account.Strategy strategy = 8;
   */
  strategy: Strategy;
  /**
   * @generated from protobuf field: string unit = 9;
   */
  unit: string;
  /**
   * @generated from protobuf field: bool archived = 10;
   */
  archived: boolean;
}
/**
 * @generated from protobuf message whiterabbit.account.AccountPage
 */
export interface AccountPage {
  /**
   * @generated from protobuf field: whiterabbit.shared.PageInfo pageInfo = 1;
   */
  pageInfo?: PageInfo;
  /**
   * @generated from protobuf field: repeated whiterabbit.account.AccountItem items = 2;
   */
  items: AccountItem[];
}
/**
 * @generated from protobuf message whiterabbit.account.AccountItem
 */
export interface AccountItem {
  /**
   * @generated from protobuf field: string cursor = 1;
   */
  cursor: string;
  /**
   * @generated from protobuf field: whiterabbit.account.Account data = 2;
   */
  data?: Account;
}
/**
 * @generated from protobuf message whiterabbit.account.AccountResponse
 */
export interface AccountResponse {
  /**
   * @generated from protobuf field: whiterabbit.account.Account item = 1;
   */
  item?: Account;
}
/**
 * @generated from protobuf message whiterabbit.account.CreateCommand
 */
export interface CreateCommand {
  /**
   * @generated from protobuf field: optional string targetId = 1;
   */
  targetId?: string;
  /**
   * @generated from protobuf field: string journal = 2;
   */
  journal: string;
  /**
   * @generated from protobuf field: string name = 3;
   */
  name: string;
  /**
   * @generated from protobuf field: string description = 4;
   */
  description: string;
  /**
   * @generated from protobuf field: whiterabbit.account.Type type = 5;
   */
  type: Type;
  /**
   * @generated from protobuf field: whiterabbit.account.Strategy strategy = 6;
   */
  strategy: Strategy;
  /**
   * @generated from protobuf field: string unit = 7;
   */
  unit: string;
  /**
   * @generated from protobuf field: bool archived = 8;
   */
  archived: boolean;
}
/**
 * @generated from protobuf message whiterabbit.account.UpdateCommand
 */
export interface UpdateCommand {
  /**
   * @generated from protobuf field: string targetId = 1;
   */
  targetId: string;
  /**
   * @generated from protobuf field: optional string journal = 2;
   */
  journal?: string;
  /**
   * @generated from protobuf field: optional string name = 3;
   */
  name?: string;
  /**
   * @generated from protobuf field: optional string description = 4;
   */
  description?: string;
  /**
   * @generated from protobuf field: optional whiterabbit.account.Type type = 5;
   */
  type?: Type;
  /**
   * @generated from protobuf field: optional whiterabbit.account.Strategy strategy = 6;
   */
  strategy?: Strategy;
  /**
   * @generated from protobuf field: optional string unit = 7;
   */
  unit?: string;
  /**
   * @generated from protobuf field: optional bool archived = 8;
   */
  archived?: boolean;
}
/**
 * @generated from protobuf message whiterabbit.account.DeleteCommand
 */
export interface DeleteCommand {
  /**
   * @generated from protobuf field: string targetId = 1;
   */
  targetId: string;
}
/**
 * @generated from protobuf message whiterabbit.account.Command
 */
export interface Command {
  /**
   * @generated from protobuf oneof: command
   */
  command:
    | {
        oneofKind: "create";
        /**
         * @generated from protobuf field: whiterabbit.account.CreateCommand create = 1;
         */
        create: CreateCommand;
      }
    | {
        oneofKind: "update";
        /**
         * @generated from protobuf field: whiterabbit.account.UpdateCommand update = 2;
         */
        update: UpdateCommand;
      }
    | {
        oneofKind: "delete";
        /**
         * @generated from protobuf field: whiterabbit.account.DeleteCommand delete = 3;
         */
        delete: DeleteCommand;
      }
    | {
        oneofKind: undefined;
      };
}
/**
 * @generated from protobuf message whiterabbit.account.Commands
 */
export interface Commands {
  /**
   * @generated from protobuf field: repeated whiterabbit.account.Command commands = 1;
   */
  commands: Command[];
}
/**
 * @generated from protobuf enum whiterabbit.account.Type
 */
export enum Type {
  /**
   * @generated from protobuf enum value: INCOME = 0;
   */
  INCOME = 0,
  /**
   * @generated from protobuf enum value: EXPENSE = 1;
   */
  EXPENSE = 1,
  /**
   * @generated from protobuf enum value: ASSET = 2;
   */
  ASSET = 2,
  /**
   * @generated from protobuf enum value: LIABILITY = 3;
   */
  LIABILITY = 3,
  /**
   * @generated from protobuf enum value: EQUITY = 4;
   */
  EQUITY = 4,
}
/**
 * @generated from protobuf enum whiterabbit.account.Strategy
 */
export enum Strategy {
  /**
   * @generated from protobuf enum value: FIFO = 0;
   */
  FIFO = 0,
  /**
   * @generated from protobuf enum value: AVERAGE = 1;
   */
  AVERAGE = 1,
}
// @generated message type with reflection information, may provide speed optimized methods
class Account$Type extends MessageType<Account> {
  constructor() {
    super("whiterabbit.account.Account", [
      { no: 1, name: "id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
      { no: 2, name: "createdAt", kind: "message", T: () => Timestamp },
      { no: 3, name: "updatedAt", kind: "message", T: () => Timestamp },
      { no: 4, name: "journal", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
      { no: 5, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
      {
        no: 6,
        name: "description",
        kind: "scalar",
        T: 9 /*ScalarType.STRING*/,
      },
      {
        no: 7,
        name: "type",
        kind: "enum",
        T: () => ["whiterabbit.account.Type", Type],
      },
      {
        no: 8,
        name: "strategy",
        kind: "enum",
        T: () => ["whiterabbit.account.Strategy", Strategy],
      },
      { no: 9, name: "unit", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
      { no: 10, name: "archived", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
    ]);
  }
}
/**
 * @generated MessageType for protobuf message whiterabbit.account.Account
 */
export const Account = new Account$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AccountPage$Type extends MessageType<AccountPage> {
  constructor() {
    super("whiterabbit.account.AccountPage", [
      { no: 1, name: "pageInfo", kind: "message", T: () => PageInfo },
      {
        no: 2,
        name: "items",
        kind: "message",
        repeat: 1 /*RepeatType.PACKED*/,
        T: () => AccountItem,
      },
    ]);
  }
}
/**
 * @generated MessageType for protobuf message whiterabbit.account.AccountPage
 */
export const AccountPage = new AccountPage$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AccountItem$Type extends MessageType<AccountItem> {
  constructor() {
    super("whiterabbit.account.AccountItem", [
      { no: 1, name: "cursor", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
      { no: 2, name: "data", kind: "message", T: () => Account },
    ]);
  }
}
/**
 * @generated MessageType for protobuf message whiterabbit.account.AccountItem
 */
export const AccountItem = new AccountItem$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AccountResponse$Type extends MessageType<AccountResponse> {
  constructor() {
    super("whiterabbit.account.AccountResponse", [
      { no: 1, name: "item", kind: "message", T: () => Account },
    ]);
  }
}
/**
 * @generated MessageType for protobuf message whiterabbit.account.AccountResponse
 */
export const AccountResponse = new AccountResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CreateCommand$Type extends MessageType<CreateCommand> {
  constructor() {
    super("whiterabbit.account.CreateCommand", [
      {
        no: 1,
        name: "targetId",
        kind: "scalar",
        opt: true,
        T: 9 /*ScalarType.STRING*/,
      },
      { no: 2, name: "journal", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
      { no: 3, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
      {
        no: 4,
        name: "description",
        kind: "scalar",
        T: 9 /*ScalarType.STRING*/,
      },
      {
        no: 5,
        name: "type",
        kind: "enum",
        T: () => ["whiterabbit.account.Type", Type],
      },
      {
        no: 6,
        name: "strategy",
        kind: "enum",
        T: () => ["whiterabbit.account.Strategy", Strategy],
      },
      { no: 7, name: "unit", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
      { no: 8, name: "archived", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
    ]);
  }
}
/**
 * @generated MessageType for protobuf message whiterabbit.account.CreateCommand
 */
export const CreateCommand = new CreateCommand$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UpdateCommand$Type extends MessageType<UpdateCommand> {
  constructor() {
    super("whiterabbit.account.UpdateCommand", [
      { no: 1, name: "targetId", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
      {
        no: 2,
        name: "journal",
        kind: "scalar",
        opt: true,
        T: 9 /*ScalarType.STRING*/,
      },
      {
        no: 3,
        name: "name",
        kind: "scalar",
        opt: true,
        T: 9 /*ScalarType.STRING*/,
      },
      {
        no: 4,
        name: "description",
        kind: "scalar",
        opt: true,
        T: 9 /*ScalarType.STRING*/,
      },
      {
        no: 5,
        name: "type",
        kind: "enum",
        opt: true,
        T: () => ["whiterabbit.account.Type", Type],
      },
      {
        no: 6,
        name: "strategy",
        kind: "enum",
        opt: true,
        T: () => ["whiterabbit.account.Strategy", Strategy],
      },
      {
        no: 7,
        name: "unit",
        kind: "scalar",
        opt: true,
        T: 9 /*ScalarType.STRING*/,
      },
      {
        no: 8,
        name: "archived",
        kind: "scalar",
        opt: true,
        T: 8 /*ScalarType.BOOL*/,
      },
    ]);
  }
}
/**
 * @generated MessageType for protobuf message whiterabbit.account.UpdateCommand
 */
export const UpdateCommand = new UpdateCommand$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DeleteCommand$Type extends MessageType<DeleteCommand> {
  constructor() {
    super("whiterabbit.account.DeleteCommand", [
      { no: 1, name: "targetId", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
    ]);
  }
}
/**
 * @generated MessageType for protobuf message whiterabbit.account.DeleteCommand
 */
export const DeleteCommand = new DeleteCommand$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Command$Type extends MessageType<Command> {
  constructor() {
    super("whiterabbit.account.Command", [
      {
        no: 1,
        name: "create",
        kind: "message",
        oneof: "command",
        T: () => CreateCommand,
      },
      {
        no: 2,
        name: "update",
        kind: "message",
        oneof: "command",
        T: () => UpdateCommand,
      },
      {
        no: 3,
        name: "delete",
        kind: "message",
        oneof: "command",
        T: () => DeleteCommand,
      },
    ]);
  }
}
/**
 * @generated MessageType for protobuf message whiterabbit.account.Command
 */
export const Command = new Command$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Commands$Type extends MessageType<Commands> {
  constructor() {
    super("whiterabbit.account.Commands", [
      {
        no: 1,
        name: "commands",
        kind: "message",
        repeat: 1 /*RepeatType.PACKED*/,
        T: () => Command,
      },
    ]);
  }
}
/**
 * @generated MessageType for protobuf message whiterabbit.account.Commands
 */
export const Commands = new Commands$Type();
/**
 * @generated ServiceType for protobuf service whiterabbit.account.AccountService
 */
export const AccountService = new ServiceType(
  "whiterabbit.account.AccountService",
  [
    { name: "findOne", options: {}, I: StringValue, O: AccountResponse },
    { name: "findPage", options: {}, I: FindPageRequest, O: AccountPage },
    {
      name: "findAll",
      serverStreaming: true,
      options: {},
      I: StringValue,
      O: Account,
    },
    { name: "handle", options: {}, I: Command, O: AccountResponse },
    {
      name: "handleAll",
      serverStreaming: true,
      options: {},
      I: Commands,
      O: AccountResponse,
    },
  ]
);

/* eslint-disable */
// @generated by protobuf-ts 2.7.0 with parameter eslint_disable,ts_nocheck,server_generic,client_none,optimize_code_size
// @generated from protobuf file "app.proto" (package "whiterabbit", syntax proto3)
// tslint:disable
// @ts-nocheck
import { UserPage } from "./app";
import { UserResponse } from "./app";
import { RpcInputStream } from "@protobuf-ts/runtime-rpc";
import { User } from "./app";
import { GroupPage } from "./app";
import { FindPageRequest } from "./app";
import { GroupResponse } from "./app";
import { StringValue } from "./google/protobuf/wrappers";
import { ServerCallContext } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service whiterabbit.GroupService
 */
export interface IGroupService<T = ServerCallContext> {
  /**
   * @generated from protobuf rpc: findOne(google.protobuf.StringValue) returns (whiterabbit.GroupResponse);
   */
  findOne(request: StringValue, context: T): Promise<GroupResponse>;
  /**
   * @generated from protobuf rpc: findPage(whiterabbit.FindPageRequest) returns (whiterabbit.GroupPage);
   */
  findPage(request: FindPageRequest, context: T): Promise<GroupPage>;
  /**
   * @generated from protobuf rpc: admins(google.protobuf.StringValue) returns (stream whiterabbit.User);
   */
  admins(
    request: StringValue,
    responses: RpcInputStream<User>,
    context: T
  ): Promise<void>;
  /**
   * @generated from protobuf rpc: members(google.protobuf.StringValue) returns (stream whiterabbit.User);
   */
  members(
    request: StringValue,
    responses: RpcInputStream<User>,
    context: T
  ): Promise<void>;
}
/**
 * @generated from protobuf service whiterabbit.UserService
 */
export interface IUserService<T = ServerCallContext> {
  /**
   * @generated from protobuf rpc: findOne(google.protobuf.StringValue) returns (whiterabbit.UserResponse);
   */
  findOne(request: StringValue, context: T): Promise<UserResponse>;
  /**
   * @generated from protobuf rpc: findPage(whiterabbit.FindPageRequest) returns (whiterabbit.UserPage);
   */
  findPage(request: FindPageRequest, context: T): Promise<UserPage>;
}

/* eslint-disable */
// @generated by protobuf-ts 2.7.0 with parameter eslint_disable,ts_nocheck,server_generic,client_none,optimize_code_size
// @generated from protobuf file "shared.proto" (package "whiterabbit.shared", syntax proto3)
// tslint:disable
// @ts-nocheck
import { MessageType } from "@protobuf-ts/runtime";
/**
 * @generated from protobuf message whiterabbit.shared.PageInfo
 */
export interface PageInfo {
  /**
   * @generated from protobuf field: bool hasPreviousPage = 1;
   */
  hasPreviousPage: boolean;
  /**
   * @generated from protobuf field: bool hasNextPage = 2;
   */
  hasNextPage: boolean;
  /**
   * @generated from protobuf field: optional string startCursor = 3;
   */
  startCursor?: string;
  /**
   * @generated from protobuf field: optional string endCursor = 4;
   */
  endCursor?: string;
}
/**
 * @generated from protobuf message whiterabbit.shared.Sort
 */
export interface Sort {
  /**
   * @generated from protobuf field: string field = 1;
   */
  field: string;
  /**
   * @generated from protobuf field: whiterabbit.shared.Order order = 2;
   */
  order: Order;
}
/**
 * @generated from protobuf message whiterabbit.shared.Pagination
 */
export interface Pagination {
  /**
   * @generated from protobuf field: optional string after = 1;
   */
  after?: string;
  /**
   * @generated from protobuf field: optional string before = 2;
   */
  before?: string;
  /**
   * @generated from protobuf field: uint32 size = 3;
   */
  size: number;
  /**
   * @generated from protobuf field: optional uint32 offset = 4;
   */
  offset?: number;
}
/**
 * @generated from protobuf message whiterabbit.shared.FindAllRequest
 */
export interface FindAllRequest {
  /**
   * @generated from protobuf field: optional string query = 1;
   */
  query?: string;
  /**
   * @generated from protobuf field: optional uint32 size = 2;
   */
  size?: number;
  /**
   * @generated from protobuf field: whiterabbit.shared.NullableSortArray sort = 3;
   */
  sort?: NullableSortArray;
}
/**
 * @generated from protobuf message whiterabbit.shared.FindPageRequest
 */
export interface FindPageRequest {
  /**
   * @generated from protobuf field: optional string query = 1;
   */
  query?: string;
  /**
   * @generated from protobuf field: whiterabbit.shared.Pagination pagination = 2;
   */
  pagination?: Pagination;
  /**
   * @generated from protobuf field: repeated whiterabbit.shared.Sort sort = 3;
   */
  sort: Sort[];
}
/**
 * @generated from protobuf message whiterabbit.shared.NullableStringArray
 */
export interface NullableStringArray {
  /**
   * @generated from protobuf field: repeated string items = 1;
   */
  items: string[];
}
/**
 * @generated from protobuf message whiterabbit.shared.NullableSortArray
 */
export interface NullableSortArray {
  /**
   * @generated from protobuf field: repeated whiterabbit.shared.Sort sort = 3;
   */
  sort: Sort[];
}
/**
 * @generated from protobuf enum whiterabbit.shared.Order
 */
export enum Order {
  /**
   * @generated from protobuf enum value: ASC = 0;
   */
  ASC = 0,
  /**
   * @generated from protobuf enum value: DESC = 1;
   */
  DESC = 1,
}
// @generated message type with reflection information, may provide speed optimized methods
class PageInfo$Type extends MessageType<PageInfo> {
  constructor() {
    super("whiterabbit.shared.PageInfo", [
      {
        no: 1,
        name: "hasPreviousPage",
        kind: "scalar",
        T: 8 /*ScalarType.BOOL*/,
      },
      { no: 2, name: "hasNextPage", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
      {
        no: 3,
        name: "startCursor",
        kind: "scalar",
        opt: true,
        T: 9 /*ScalarType.STRING*/,
      },
      {
        no: 4,
        name: "endCursor",
        kind: "scalar",
        opt: true,
        T: 9 /*ScalarType.STRING*/,
      },
    ]);
  }
}
/**
 * @generated MessageType for protobuf message whiterabbit.shared.PageInfo
 */
export const PageInfo = new PageInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Sort$Type extends MessageType<Sort> {
  constructor() {
    super("whiterabbit.shared.Sort", [
      { no: 1, name: "field", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
      {
        no: 2,
        name: "order",
        kind: "enum",
        T: () => ["whiterabbit.shared.Order", Order],
      },
    ]);
  }
}
/**
 * @generated MessageType for protobuf message whiterabbit.shared.Sort
 */
export const Sort = new Sort$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Pagination$Type extends MessageType<Pagination> {
  constructor() {
    super("whiterabbit.shared.Pagination", [
      {
        no: 1,
        name: "after",
        kind: "scalar",
        opt: true,
        T: 9 /*ScalarType.STRING*/,
      },
      {
        no: 2,
        name: "before",
        kind: "scalar",
        opt: true,
        T: 9 /*ScalarType.STRING*/,
      },
      { no: 3, name: "size", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
      {
        no: 4,
        name: "offset",
        kind: "scalar",
        opt: true,
        T: 13 /*ScalarType.UINT32*/,
      },
    ]);
  }
}
/**
 * @generated MessageType for protobuf message whiterabbit.shared.Pagination
 */
export const Pagination = new Pagination$Type();
// @generated message type with reflection information, may provide speed optimized methods
class FindAllRequest$Type extends MessageType<FindAllRequest> {
  constructor() {
    super("whiterabbit.shared.FindAllRequest", [
      {
        no: 1,
        name: "query",
        kind: "scalar",
        opt: true,
        T: 9 /*ScalarType.STRING*/,
      },
      {
        no: 2,
        name: "size",
        kind: "scalar",
        opt: true,
        T: 13 /*ScalarType.UINT32*/,
      },
      { no: 3, name: "sort", kind: "message", T: () => NullableSortArray },
    ]);
  }
}
/**
 * @generated MessageType for protobuf message whiterabbit.shared.FindAllRequest
 */
export const FindAllRequest = new FindAllRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class FindPageRequest$Type extends MessageType<FindPageRequest> {
  constructor() {
    super("whiterabbit.shared.FindPageRequest", [
      {
        no: 1,
        name: "query",
        kind: "scalar",
        opt: true,
        T: 9 /*ScalarType.STRING*/,
      },
      { no: 2, name: "pagination", kind: "message", T: () => Pagination },
      {
        no: 3,
        name: "sort",
        kind: "message",
        repeat: 1 /*RepeatType.PACKED*/,
        T: () => Sort,
      },
    ]);
  }
}
/**
 * @generated MessageType for protobuf message whiterabbit.shared.FindPageRequest
 */
export const FindPageRequest = new FindPageRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class NullableStringArray$Type extends MessageType<NullableStringArray> {
  constructor() {
    super("whiterabbit.shared.NullableStringArray", [
      {
        no: 1,
        name: "items",
        kind: "scalar",
        repeat: 2 /*RepeatType.UNPACKED*/,
        T: 9 /*ScalarType.STRING*/,
      },
    ]);
  }
}
/**
 * @generated MessageType for protobuf message whiterabbit.shared.NullableStringArray
 */
export const NullableStringArray = new NullableStringArray$Type();
// @generated message type with reflection information, may provide speed optimized methods
class NullableSortArray$Type extends MessageType<NullableSortArray> {
  constructor() {
    super("whiterabbit.shared.NullableSortArray", [
      {
        no: 3,
        name: "sort",
        kind: "message",
        repeat: 1 /*RepeatType.PACKED*/,
        T: () => Sort,
      },
    ]);
  }
}
/**
 * @generated MessageType for protobuf message whiterabbit.shared.NullableSortArray
 */
export const NullableSortArray = new NullableSortArray$Type();
